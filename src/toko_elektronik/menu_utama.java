/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package toko_elektronik;
import java.sql.Connection;
import java.util.ArrayList;
/**
 *
 * @author User
 */
class hitungin{

   private static int harga;
    public hitungin(int harga){
        this.harga = harga;
    }
    public hitungin(String harga){
        this.harga = Integer.parseInt(harga);
    }
    public hitungin(){

    }
    public  void tampilkanHargaSemuaDataTable(){
        formatHarga(harga);
    }
    public void tampilkanHargaTunggal(){
        formatHarga(harga);
    }

    public static void setHarga(int harga) {
        hitungin.harga = harga;
    }

    public static int sum(int start , int end){
        if(end > start){
            int t = end + sum(start , end - 1);
            System.out.println(t + "-");
            return end + sum(start,end - 1);
        } else{
            return end;
        }
    }
        public String formatHarga(int n){
        ArrayList<Character> characterAngka = new ArrayList<>();

        for(int t = 0;t< String.valueOf(n).length(); t++){
            characterAngka.add(String.valueOf(n).charAt(t));
        }
        if(characterAngka.size() == 4){
            characterAngka.add(1,'.');
        } else if(characterAngka.size()== 5) {
            characterAngka.add(2, '.');
        }else if(characterAngka.size() == 6){
//100.000
            characterAngka.add(3,'.');
        } else if(characterAngka.size() == 7){
            characterAngka.add(1,'.');
            characterAngka.add(5,'.');

        }

        for(int t = 0; t< characterAngka.size(); t++){
 
             
            if(t == 0){
                System.out.print("Rp.");
            }
            System.out.print(characterAngka.get(t));
            if(t == characterAngka.size() - 1){
                System.out.println();
            }
        }
        char ch[] = new char[characterAngka.size()];
        for(int t = 0; t< characterAngka.size(); t++){
            ch[t] = characterAngka.get(t);
        }
        return String.copyValueOf(ch);
    }

}
public class menu_utama extends javax.swing.JFrame {

    /**
     * Creates new form menu_utama
     */
    public menu_utama() {
        initComponents();
          this.setResizable(false);
    }
     public void getTotalHari(){
        String sqlx = "SELECT * FROM `transaksi_beli` WHERE  `id_transaksi`";
    }
    
    static String getPosisiTerakhirDataBarang(){
            ArrayList<String> data = new ArrayList<>();
         
        try{
            String sqlQuery = "SELECT * FROM `data_barang` ORDER BY `idbarang` DESC";
            java.sql.Connection conn = (Connection) konektor.configDB();
            java.sql.PreparedStatement prs = conn.prepareStatement(sqlQuery);
            java.sql.ResultSet rs = prs.executeQuery();
        
              while(rs.next()){
                  data.add(rs.getString("idbarang"));
             }
             
        } catch(Exception e){
            e.printStackTrace();
        }
        return data.get(0);
    }
    int nPosisi;
    
    public void getTotalHari1(){
        String sqlx = "SELECT * FROM  `penjualan` WHERE `idpenjualan`";
    }

    static String getPosisiTerakhirDataBarang1(){
        ArrayList<String> data = new ArrayList<>();
        try {
            String sqlQuery = "SELECT * FROM `penjualan` ORDER BY `idpenjualan`";
            java.sql.Connection conn =(Connection)konektor.configDB();
            java.sql.PreparedStatement prs = conn.prepareStatement(sqlQuery);
            java.sql.ResultSet rs = prs.executeQuery();
            
            while(rs.next()) {
                data.add(rs.getString("idpenjualan"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return data.get(0);
    }
    int nPosisi1;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_total = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txt_total1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_total.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        getContentPane().add(txt_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 560, 150, 30));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 600, -1, -1));

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 600, -1, -1));

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 600, -1, -1));

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 590, -1, -1));

        txt_total1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        getContentPane().add(txt_total1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 560, 190, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar_layout/daksbor.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      mendapatkanHargaBeliTotal();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        mendapatkanHargaBeliTotalBulan();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
mendapatHargaBeliTotal1();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        mendapatkanHargaBeliTotalBulan1 ();
    }//GEN-LAST:event_jButton4ActionPerformed

int totalHargaBeli;
    public void mendapatkanHargaBeliTotal(){
    String queryGetHargaBeli = "SELECT SUM(hargaBeli * stock) AS total_PengeluaranHarian FROM `data_barang` WHERE DAY(tanggal) = DAY(now()) ";
    try{ 
    java.sql.Connection conn = (Connection) konektor.configDB();
    java.sql.PreparedStatement prs = conn.prepareStatement(queryGetHargaBeli);
    java.sql.ResultSet rs = prs.executeQuery(queryGetHargaBeli);
    while(rs.next()){
        totalHargaBeli = (Integer.parseInt(rs.getString("total_PengeluaranHarian")));
    }
 hitungin obj = new hitungin(totalHargaBeli);
    txt_total.setText("Rp " + obj.formatHarga(totalHargaBeli));
    } catch(Exception e){
        e.printStackTrace();
    }
}
    public void mendapatkanHargaBeliTotalBulan (){
    String queryGetHargaBeli = "SELECT SUM(hargaBeli * stock) AS totalPengeluaranBulanan FROM `data_barang` WHERE MONTH(tanggal) = MONTH(now()) ";
    try{ 
    java.sql.Connection conn = (Connection) konektor.configDB();
    java.sql.PreparedStatement prs = conn.prepareStatement(queryGetHargaBeli);
    java.sql.ResultSet rs = prs.executeQuery(queryGetHargaBeli);
    while(rs.next()){
        totalHargaBeli = (Integer.parseInt(rs.getString("totalPengeluaranBulanan")));
    }
    hitungin obj = new hitungin(totalHargaBeli);
    txt_total.setText("Rp " + obj.formatHarga(totalHargaBeli));
    } catch(Exception e){
        e.printStackTrace();
    }
    }

  //pemasukan  
int totalHargaJual;
float hari;
public void mendapatHargaBeliTotal1(){
    String gethargabeli = "SELECT SUM(harga * jumlah) AS totalharian FROM `penjualan` "
            + "WHERE DAY(tanggal_transaksi) = DAY(now())";
    try {
        java.sql.Connection conn =(Connection)konektor.configDB();
        java.sql.PreparedStatement prs = conn.prepareStatement(gethargabeli);
        java.sql.ResultSet rs = prs.executeQuery(gethargabeli);
        while(rs.next()) {
            System.out.println(rs.getString("totalHarian"));
           hari = Float.parseFloat(rs.getString("totalharian"));
           
            totalHargaJual = (int) hari;
           
        }
    hitungin obj = new hitungin(totalHargaJual);
    txt_total1.setText("Rp " +obj.formatHarga(totalHargaJual));
} catch (Exception e) {
    e.printStackTrace();
}
}

float bulan;
 public void mendapatkanHargaBeliTotalBulan1 (){
    String queryGetHargaBeli = "SELECT SUM(harga * jumlah) AS totalPengeluaranBulanan FROM `penjualan` "
            + "WHERE MONTH(tanggal_transaksi) = MONTH(now()) ";
    try{ 
    java.sql.Connection conn = (Connection) konektor.configDB();
    java.sql.PreparedStatement prs = conn.prepareStatement(queryGetHargaBeli);
    java.sql.ResultSet rs = prs.executeQuery(queryGetHargaBeli);
    while(rs.next()){
        bulan = Float.parseFloat(rs.getString("totalPengeluaranBulanan"));
        totalHargaJual = (int) bulan;
    }
    hitungin obj = new hitungin(totalHargaJual);
    txt_total1.setText("Rp " + obj.formatHarga(totalHargaJual));
    } catch(Exception e){
        e.printStackTrace();
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu_utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu_utama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel txt_total;
    private javax.swing.JLabel txt_total1;
    // End of variables declaration//GEN-END:variables
}
